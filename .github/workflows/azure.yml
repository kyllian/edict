# Run when commits are pushed to release/0.2.2
on:
  workflow_dispatch:
  push:
    # Run when commits are pushed to mainline branch (main or master)
    # Set this to the mainline branch you are using
    branches:
      - release/**

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read


jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}
      ASPNETCORE_ENVIRONMENT: Production
      DOTNET_ENVIRONMENT: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install azd
        uses: Azure/setup-azd@v2
        with:
          version: 1.20.1
            name: Setup .NET
            uses: actions/setup-dotnet@v4
            with:
              dotnet-version: |
                8.x.x
                9.x.x

              - name: Log in with Azure (Federated Credentials)
                run: |
                  azd auth login `
                    --client-id "$Env:AZURE_CLIENT_ID" `
                    --federated-credential-provider "github" `
                    --tenant-id "$Env:AZURE_TENANT_ID"
                shell: pwsh


              - name: Provision Infrastructure
                run: azd provision --no-prompt --parameter customDomain="${{ vars.AZURE_CUSTOM_DOMAIN }}" --parameter certificateName="${{ secrets.AZURE_CERTIFICATE_NAME }}"
                env:
                  AZURE_ELASTICSEARCH_PASSWORD: ${{ secrets.AZURE_ELASTICSEARCH_PASSWORD }}
                  AZURE_POSTGRES_PASSWORD: ${{ secrets.AZURE_POSTGRES_PASSWORD }}

              - name: Deploy Application
                run: azd deploy --no-prompt --parameter customDomain="${{ vars.AZURE_CUSTOM_DOMAIN }}" --parameter certificateName="${{ secrets.AZURE_CERTIFICATE_NAME }}"
                env:
                  AZURE_ELASTICSEARCH_PASSWORD: ${{ secrets.AZURE_ELASTICSEARCH_PASSWORD }}
                  AZURE_POSTGRES_PASSWORD: ${{ secrets.AZURE_POSTGRES_PASSWORD }}