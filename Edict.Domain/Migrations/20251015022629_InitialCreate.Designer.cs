// <auto-generated />
using System;
using Edict.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Edict.Domain.Migrations
{
    [DbContext(typeof(EdictDbContext))]
    [Migration("20251015022629_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BaseRuleBaseRule", b =>
                {
                    b.Property<Guid>("BaseRuleId")
                        .HasColumnType("uuid")
                        .HasColumnName("base_rule_id");

                    b.Property<Guid>("RuleReferencesId")
                        .HasColumnType("uuid")
                        .HasColumnName("rule_references_id");

                    b.HasKey("BaseRuleId", "RuleReferencesId")
                        .HasName("pk_base_rule_base_rule");

                    b.HasIndex("RuleReferencesId")
                        .HasDatabaseName("ix_base_rule_base_rule_rule_references_id");

                    b.ToTable("base_rule_base_rule", (string)null);
                });

            modelBuilder.Entity("BaseRuleDefinition", b =>
                {
                    b.Property<Guid>("DefinitionId")
                        .HasColumnType("uuid")
                        .HasColumnName("definition_id");

                    b.Property<Guid>("RuleReferencesId")
                        .HasColumnType("uuid")
                        .HasColumnName("rule_references_id");

                    b.HasKey("DefinitionId", "RuleReferencesId")
                        .HasName("pk_base_rule_definition");

                    b.HasIndex("RuleReferencesId")
                        .HasDatabaseName("ix_base_rule_definition_rule_references_id");

                    b.ToTable("base_rule_definition", (string)null);
                });

            modelBuilder.Entity("Edict.Domain.Entities.BaseRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<string>("discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)")
                        .HasColumnName("discriminator");

                    b.HasKey("Id")
                        .HasName("pk_rules");

                    b.ToTable("rules", (string)null);

                    b.HasDiscriminator<string>("discriminator").IsComplete(false).HasValue("BaseRule");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Edict.Domain.Entities.Definition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("term");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("pk_glossary");

                    b.ToTable("glossary", (string)null);
                });

            modelBuilder.Entity("Edict.Domain.Entities.RuleExample", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text")
                        .HasAnnotation("Relational:JsonPropertyName", "text");

                    b.Property<Guid?>("rule_example_id")
                        .HasColumnType("uuid")
                        .HasColumnName("rule_example_id");

                    b.HasKey("Id")
                        .HasName("pk_rule_examples");

                    b.HasIndex("rule_example_id")
                        .HasDatabaseName("ix_rule_examples_rule_example_id");

                    b.ToTable("rule_examples", (string)null);
                });

            modelBuilder.Entity("Edict.Domain.Entities.Rule", b =>
                {
                    b.HasBaseType("Edict.Domain.Entities.BaseRule");

                    b.Property<Guid?>("rule_section_id")
                        .HasColumnType("uuid")
                        .HasColumnName("rule_section_id");

                    b.Property<Guid?>("rule_subsection_id")
                        .HasColumnType("uuid")
                        .HasColumnName("rule_subsection_id");

                    b.HasIndex("rule_section_id")
                        .HasDatabaseName("ix_rules_rule_section_id");

                    b.HasIndex("rule_subsection_id")
                        .HasDatabaseName("ix_rules_rule_subsection_id");

                    b.ToTable("rules", (string)null);

                    b.HasDiscriminator().HasValue("rule");
                });

            modelBuilder.Entity("Edict.Domain.Entities.RuleSection", b =>
                {
                    b.HasBaseType("Edict.Domain.Entities.BaseRule");

                    b.ToTable("rules");

                    b.HasDiscriminator().HasValue("rule_section");
                });

            modelBuilder.Entity("Edict.Domain.Entities.RuleSubsection", b =>
                {
                    b.HasBaseType("Edict.Domain.Entities.BaseRule");

                    b.Property<Guid?>("subsection_section_id")
                        .HasColumnType("uuid")
                        .HasColumnName("subsection_section_id");

                    b.HasIndex("subsection_section_id")
                        .HasDatabaseName("ix_rules_subsection_section_id");

                    b.ToTable("rules");

                    b.HasDiscriminator().HasValue("rule_subsection");
                });

            modelBuilder.Entity("Edict.Domain.Entities.Subrule", b =>
                {
                    b.HasBaseType("Edict.Domain.Entities.BaseRule");

                    b.Property<Guid?>("subrule_rule_id")
                        .HasColumnType("uuid")
                        .HasColumnName("subrule_rule_id");

                    b.Property<Guid?>("subrule_section_id")
                        .HasColumnType("uuid")
                        .HasColumnName("subrule_section_id");

                    b.Property<Guid?>("subrule_subsection_id")
                        .HasColumnType("uuid")
                        .HasColumnName("subrule_subsection_id");

                    b.HasIndex("subrule_rule_id")
                        .HasDatabaseName("ix_rules_subrule_rule_id");

                    b.HasIndex("subrule_section_id")
                        .HasDatabaseName("ix_rules_subrule_section_id");

                    b.HasIndex("subrule_subsection_id")
                        .HasDatabaseName("ix_rules_subrule_subsection_id");

                    b.ToTable("rules");

                    b.HasDiscriminator().HasValue("subrule");
                });

            modelBuilder.Entity("BaseRuleBaseRule", b =>
                {
                    b.HasOne("Edict.Domain.Entities.BaseRule", null)
                        .WithMany()
                        .HasForeignKey("BaseRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_base_rule_base_rule_rules_base_rule_id");

                    b.HasOne("Edict.Domain.Entities.BaseRule", null)
                        .WithMany()
                        .HasForeignKey("RuleReferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_base_rule_base_rule_rules_rule_references_id");
                });

            modelBuilder.Entity("BaseRuleDefinition", b =>
                {
                    b.HasOne("Edict.Domain.Entities.Definition", null)
                        .WithMany()
                        .HasForeignKey("DefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_base_rule_definition_glossary_definition_id");

                    b.HasOne("Edict.Domain.Entities.BaseRule", null)
                        .WithMany()
                        .HasForeignKey("RuleReferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_base_rule_definition_rules_rule_references_id");
                });

            modelBuilder.Entity("Edict.Domain.Entities.RuleExample", b =>
                {
                    b.HasOne("Edict.Domain.Entities.BaseRule", null)
                        .WithMany("Examples")
                        .HasForeignKey("rule_example_id")
                        .HasConstraintName("fk_rule_rule_examples");
                });

            modelBuilder.Entity("Edict.Domain.Entities.Rule", b =>
                {
                    b.HasOne("Edict.Domain.Entities.RuleSection", "Section")
                        .WithMany()
                        .HasForeignKey("rule_section_id")
                        .HasConstraintName("fk_rule_section");

                    b.HasOne("Edict.Domain.Entities.RuleSubsection", "Subsection")
                        .WithMany("Rules")
                        .HasForeignKey("rule_subsection_id")
                        .HasConstraintName("fk_rule_subsection");

                    b.Navigation("Section");

                    b.Navigation("Subsection");
                });

            modelBuilder.Entity("Edict.Domain.Entities.RuleSubsection", b =>
                {
                    b.HasOne("Edict.Domain.Entities.RuleSection", "Section")
                        .WithMany("Subsections")
                        .HasForeignKey("subsection_section_id")
                        .HasConstraintName("fk_subsection_section");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Edict.Domain.Entities.Subrule", b =>
                {
                    b.HasOne("Edict.Domain.Entities.Rule", "Rule")
                        .WithMany("Subrules")
                        .HasForeignKey("subrule_rule_id")
                        .HasConstraintName("fk_subrule_rule");

                    b.HasOne("Edict.Domain.Entities.RuleSection", "Section")
                        .WithMany()
                        .HasForeignKey("subrule_section_id")
                        .HasConstraintName("fk_subrule_section");

                    b.HasOne("Edict.Domain.Entities.RuleSubsection", "Subsection")
                        .WithMany()
                        .HasForeignKey("subrule_subsection_id")
                        .HasConstraintName("fk_subrule_subsection");

                    b.Navigation("Rule");

                    b.Navigation("Section");

                    b.Navigation("Subsection");
                });

            modelBuilder.Entity("Edict.Domain.Entities.BaseRule", b =>
                {
                    b.Navigation("Examples");
                });

            modelBuilder.Entity("Edict.Domain.Entities.Rule", b =>
                {
                    b.Navigation("Subrules");
                });

            modelBuilder.Entity("Edict.Domain.Entities.RuleSection", b =>
                {
                    b.Navigation("Subsections");
                });

            modelBuilder.Entity("Edict.Domain.Entities.RuleSubsection", b =>
                {
                    b.Navigation("Rules");
                });
#pragma warning restore 612, 618
        }
    }
}
